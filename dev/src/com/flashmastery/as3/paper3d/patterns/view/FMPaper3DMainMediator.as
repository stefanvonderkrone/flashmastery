package com.flashmastery.as3.paper3d.patterns.view {	import com.flashmastery.as3.display.ExtendedSprite;	import com.flashmastery.as3.paper3d.core.FMPaper3DApplication;	import org.puremvc.as3.multicore.interfaces.IMediator;	import org.puremvc.as3.multicore.interfaces.INotification;	import org.puremvc.as3.multicore.patterns.mediator.Mediator;	import flash.display.DisplayObject;	/**	 * @author Stefan von der Krone (2009)	 */	public class FMPaper3DMainMediator extends Mediator implements IMediator {		public static const NAME : String = "FMPaper3DMainMediator";		public function FMPaper3DMainMediator(viewComponent : DisplayObject) {			super(NAME, viewComponent);		}				private function get view() : FMPaper3DApplication {			return viewComponent as FMPaper3DApplication;		}		override public function listNotificationInterests() : Array {			return [];		}				override public function handleNotification(note : INotification) : void {			switch(note.getName()) {				case "": break; 				}		}		override public function onRegister() : void {			//register new mediators here			facade.registerMediator( new FMPaper3DBookMediator( view.addChild( new ExtendedSprite( false ) ) ) );		}	}}